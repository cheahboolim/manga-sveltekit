-- =========================
-- Core Tables
-- =========================

create table public.manga (
  id uuid not null default gen_random_uuid(),
  manga_id text not null,
  title text not null,
  feature_image_url text null,
  created_at timestamp with time zone null default now(),
  constraint manga_pkey primary key (id)
) tablespace pg_default;

create index if not exists idx_manga_title on public.manga using btree (title) tablespace pg_default;
create index if not exists idx_manga_title_ilike on public.manga using gin (title gin_trgm_ops) tablespace pg_default;
create index if not exists idx_manga_created_at on public.manga using btree (created_at desc) tablespace pg_default;

create table public.artists (
  id serial primary key,
  name text not null unique
) tablespace pg_default;

create table public.categories (
  id serial primary key,
  name text not null unique
) tablespace pg_default;

create table public.characters (
  id serial primary key,
  name text not null unique
) tablespace pg_default;

create table public.groups (
  id serial primary key,
  name text not null unique
) tablespace pg_default;

create table public.languages (
  id serial primary key,
  name text not null unique
) tablespace pg_default;

create table public.tags (
  id serial primary key,
  name text not null unique
) tablespace pg_default;

create table public.parodies (
  id serial primary key,
  name text not null unique
) tablespace pg_default;

create table public.pages (
  id serial primary key,
  manga_id uuid not null references public.manga(id) on delete cascade,
  page_number int not null,
  image_url text not null,
  unique (manga_id, page_number)
) tablespace pg_default;

create table public.slug_map (
  slug text primary key,
  manga_id uuid not null references public.manga(id) on delete cascade
) tablespace pg_default;

-- =========================
-- Junction Tables
-- =========================

create table public.manga_artists (
  manga_id uuid not null,
  artist_id int not null,
  primary key (manga_id, artist_id),
  foreign key (manga_id) references public.manga(id) on delete cascade,
  foreign key (artist_id) references public.artists(id) on delete cascade
) tablespace pg_default;

create table public.manga_categories (
  manga_id uuid not null,
  category_id int not null,
  primary key (manga_id, category_id),
  foreign key (manga_id) references public.manga(id) on delete cascade,
  foreign key (category_id) references public.categories(id) on delete cascade
) tablespace pg_default;

create table public.manga_characters (
  manga_id uuid not null,
  character_id int not null,
  primary key (manga_id, character_id),
  foreign key (manga_id) references public.manga(id) on delete cascade,
  foreign key (character_id) references public.characters(id) on delete cascade
) tablespace pg_default;

create table public.manga_groups (
  manga_id uuid not null,
  group_id int not null,
  primary key (manga_id, group_id),
  foreign key (manga_id) references public.manga(id) on delete cascade,
  foreign key (group_id) references public.groups(id) on delete cascade
) tablespace pg_default;

create table public.manga_languages (
  manga_id uuid not null,
  language_id int not null,
  primary key (manga_id, language_id),
  foreign key (manga_id) references public.manga(id) on delete cascade,
  foreign key (language_id) references public.languages(id) on delete cascade
) tablespace pg_default;

create table public.manga_parodies (
  manga_id uuid not null,
  parody_id int not null,
  primary key (manga_id, parody_id),
  foreign key (manga_id) references public.manga(id) on delete cascade,
  foreign key (parody_id) references public.parodies(id) on delete cascade
) tablespace pg_default;

create table public.manga_tags (
  manga_id uuid not null,
  tag_id int not null,
  primary key (manga_id, tag_id),
  foreign key (manga_id) references public.manga(id) on delete cascade,
  foreign key (tag_id) references public.tags(id) on delete cascade
) tablespace pg_default;

-- =========================
-- Indexes for Junction Tables
-- =========================

create index if not exists idx_manga_artists_manga_id on public.manga_artists using btree (manga_id) tablespace pg_default;
create index if not exists idx_manga_artists_artist_id on public.manga_artists using btree (artist_id) tablespace pg_default;

create index if not exists idx_manga_categories_manga_id on public.manga_categories using btree (manga_id) tablespace pg_default;
create index if not exists idx_manga_categories_category_id on public.manga_categories using btree (category_id) tablespace pg_default;

create index if not exists idx_manga_characters_manga_id on public.manga_characters using btree (manga_id) tablespace pg_default;
create index if not exists idx_manga_characters_character_id on public.manga_characters using btree (character_id) tablespace pg_default;

create index if not exists idx_manga_groups_manga_id on public.manga_groups using btree (manga_id) tablespace pg_default;
create index if not exists idx_manga_groups_group_id on public.manga_groups using btree (group_id) tablespace pg_default;

create index if not exists idx_manga_languages_manga_id on public.manga_languages using btree (manga_id) tablespace pg_default;
create index if not exists idx_manga_languages_language_id on public.manga_languages using btree (language_id) tablespace pg_default;

create index if not exists idx_manga_parodies_manga_id on public.manga_parodies using btree (manga_id) tablespace pg_default;
create index if not exists idx_manga_parodies_parody_id on public.manga_parodies using btree (parody_id) tablespace pg_default;

create index if not exists idx_manga_tags_manga_id on public.manga_tags using btree (manga_id) tablespace pg_default;
create index if not exists idx_manga_tags_tag_id on public.manga_tags using btree (tag_id) tablespace pg_default;
